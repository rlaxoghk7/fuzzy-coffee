Git 이란?
Git(깃)은 컴퓨터 파일의 변경사항을 추적하고 팀 간에 해당 파일 작업을 조율하기 위한 대표적인 버전 관리 시스템(VCS)

1. git 세팅 시 처음 한번 수행되어야 하는 세팅
  개행문자 (NewLine) 설정
  - mac0s
  경로> git config --global core.autocrlf input
  - Windows
  경로> git config --global core.autocrlf true

  사용자 정보
  커밋(버전 생성)을 위한 정보 등록
  경로> git config --global user.name '깃허브에 지정된 이름'
  경로> git config --global user.email '깃허브에 지정된 메일'

  구성확인
  경로> git config --global --list 

2. git 실행(로컬에서)
  경로> git init : 현재 프로젝트에서 변경 사항 추적(버전 관리)을 시작
        (index, css, img 등 변경사항을 로컬(내컴퓨터에서)에서 발생)
        - master라는 브랜치 발생(프로젝트 시작)
        - 파일들 빨간색으로 나타남
  경로> git add 변경파일명 : 변경사항을 추적할 파일이름 지정
        - 특정파일 하나 올릴 시 : git add 특정파일명
        - 전체 올릴 시 : git add . 
        - 파일들 초록색으로 변경
        - 버전으로 만들 준비(변경사항 추적 중...)
  경로> git commit -m '시작부분이나 변경내용부분을 삽입'
        - 메시지(-m) 함께 버전을 생성('-'옵션=>플래그라고 함)
        - 파일들 회색으로 변경
        - 만약 파일이 새롭게 생성이 된다면 git commit -m 'main.js scroll기능 변경'
  (원격으로 연결)
  경로> git remote add origin 깃저장소 주소 : origin이라는 별칭으로원격  저장소를 연결
  경로> git push origin 브랜치이름(master 또는 main) : origin이란 별칭의 원격 저장소로 버전 내용 전송

3. branch
    경로> git branch : 로컬에 만들어져 있는 브랜치 확인
    경로> git branch -a : 원격 저장소(Github페이지)에 만들어져 있는 브랜치 확인
    경로> git branch 만들어야 할 브랜치 이름 : git branch signin
    경로> git checkout 이동할 블내치 이름 : git checkout signin

4. git 관련 명령어들
      경로> git status : 현재 상태 확인 (수정했던 내용들이 빨간색으로 나타남)
      경로> 
      경로>
      경로>
      경로>
      경로>
      경로>
      경로>







git 캐시 삭제
  - git credential-cache exit